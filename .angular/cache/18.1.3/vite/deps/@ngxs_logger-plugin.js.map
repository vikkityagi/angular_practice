{
  "version": 3,
  "sources": ["../../../../../node_modules/@ngxs/logger-plugin/fesm2022/ngxs-logger-plugin.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Inject, NgModule, makeEnvironmentProviders } from '@angular/core';\nimport { Store, withNgxsPlugin } from '@ngxs/store';\nimport { getActionTypeFromInstance, NGXS_PLUGINS } from '@ngxs/store/plugins';\nimport { tap, catchError } from 'rxjs/operators';\nconst repeat = (str, times) => new Array(times + 1).join(str);\nconst pad = (num, maxLength) => repeat('0', maxLength - num.toString().length) + num;\nfunction formatTime(time) {\n  return pad(time.getHours(), 2) + `:` + pad(time.getMinutes(), 2) + `:` + pad(time.getSeconds(), 2) + `.` + pad(time.getMilliseconds(), 3);\n}\nclass ActionLogger {\n  constructor(action, store, logWriter) {\n    this.action = action;\n    this.store = store;\n    this.logWriter = logWriter;\n  }\n  dispatched(state) {\n    const actionName = getActionTypeFromInstance(this.action);\n    const formattedTime = formatTime(new Date());\n    const message = `action ${actionName} @ ${formattedTime}`;\n    this.logWriter.startGroup(message);\n    // print payload only if at least one property is supplied\n    if (this._hasPayload(this.action)) {\n      this.logWriter.logGrey('payload', {\n        ...this.action\n      });\n    }\n    this.logWriter.logGrey('prev state', state);\n  }\n  completed(nextState) {\n    this.logWriter.logGreen('next state', nextState);\n    this.logWriter.endGroup();\n  }\n  errored(error) {\n    this.logWriter.logRedish('next state after error', this.store.snapshot());\n    this.logWriter.logRedish('error', error);\n    this.logWriter.endGroup();\n  }\n  _hasPayload(event) {\n    const nonEmptyProperties = this._getNonEmptyProperties(event);\n    return nonEmptyProperties.length > 0;\n  }\n  _getNonEmptyProperties(event) {\n    const keys = Object.keys(event);\n    const values = keys.map(key => event[key]);\n    return values.filter(value => value !== undefined);\n  }\n}\nclass LogWriter {\n  constructor(options) {\n    this.options = options;\n    this.options = this.options || {};\n    this.logger = options.logger || console;\n  }\n  startGroup(message) {\n    const startGroupFn = this.options.collapsed ? this.logger.groupCollapsed : this.logger.group;\n    try {\n      startGroupFn.call(this.logger, message);\n    } catch (e) {\n      console.log(message);\n    }\n  }\n  endGroup() {\n    try {\n      this.logger.groupEnd();\n    } catch (e) {\n      this.logger.log('—— log end ——');\n    }\n  }\n  logGrey(title, payload) {\n    const greyStyle = 'color: #9E9E9E; font-weight: bold';\n    this.log(title, greyStyle, payload);\n  }\n  logGreen(title, payload) {\n    const greenStyle = 'color: #4CAF50; font-weight: bold';\n    this.log(title, greenStyle, payload);\n  }\n  logRedish(title, payload) {\n    const redishStyle = 'color: #FD8182; font-weight: bold';\n    this.log(title, redishStyle, payload);\n  }\n  log(title, color, payload) {\n    if (this.isIE()) {\n      this.logger.log(title, payload);\n    } else {\n      this.logger.log('%c ' + title, color, payload);\n    }\n  }\n  isIE() {\n    const ua = typeof window !== 'undefined' && window.navigator.userAgent ? window.navigator.userAgent : '';\n    let msIE = false;\n    const oldIE = ua.indexOf('MSIE ');\n    const newIE = ua.indexOf('Trident/');\n    if (oldIE > -1 || newIE > -1) {\n      msIE = true;\n    }\n    return msIE;\n  }\n}\nconst NGXS_LOGGER_PLUGIN_OPTIONS = new InjectionToken('NGXS_LOGGER_PLUGIN_OPTIONS');\nclass NgxsLoggerPlugin {\n  constructor(_options, _injector) {\n    this._options = _options;\n    this._injector = _injector;\n  }\n  handle(state, event, next) {\n    if (this._options.disabled || !this._options.filter(event, state)) {\n      return next(state, event);\n    }\n    this._logWriter = this._logWriter || new LogWriter(this._options);\n    // Retrieve lazily to avoid cyclic dependency exception\n    this._store = this._store || this._injector.get(Store);\n    const actionLogger = new ActionLogger(event, this._store, this._logWriter);\n    actionLogger.dispatched(state);\n    return next(state, event).pipe(tap(nextState => {\n      actionLogger.completed(nextState);\n    }), catchError(error => {\n      actionLogger.errored(error);\n      throw error;\n    }));\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function NgxsLoggerPlugin_Factory(ɵt) {\n      return new (ɵt || NgxsLoggerPlugin)(i0.ɵɵinject(NGXS_LOGGER_PLUGIN_OPTIONS), i0.ɵɵinject(i0.Injector));\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NgxsLoggerPlugin,\n      factory: NgxsLoggerPlugin.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxsLoggerPlugin, [{\n    type: Injectable\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [NGXS_LOGGER_PLUGIN_OPTIONS]\n    }]\n  }, {\n    type: i0.Injector\n  }], null);\n})();\nconst USER_OPTIONS = new InjectionToken('LOGGER_USER_OPTIONS');\nfunction loggerOptionsFactory(options) {\n  const defaultLoggerOptions = {\n    logger: console,\n    collapsed: false,\n    disabled: false,\n    filter: () => true\n  };\n  return {\n    ...defaultLoggerOptions,\n    ...options\n  };\n}\nclass NgxsLoggerPluginModule {\n  static forRoot(options) {\n    return {\n      ngModule: NgxsLoggerPluginModule,\n      providers: [{\n        provide: NGXS_PLUGINS,\n        useClass: NgxsLoggerPlugin,\n        multi: true\n      }, {\n        provide: USER_OPTIONS,\n        useValue: options\n      }, {\n        provide: NGXS_LOGGER_PLUGIN_OPTIONS,\n        useFactory: loggerOptionsFactory,\n        deps: [USER_OPTIONS]\n      }]\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function NgxsLoggerPluginModule_Factory(ɵt) {\n      return new (ɵt || NgxsLoggerPluginModule)();\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: NgxsLoggerPluginModule\n    });\n  }\n  /** @nocollapse */\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxsLoggerPluginModule, [{\n    type: NgModule\n  }], null, null);\n})();\nfunction withNgxsLoggerPlugin(options) {\n  return makeEnvironmentProviders([withNgxsPlugin(NgxsLoggerPlugin), {\n    provide: USER_OPTIONS,\n    useValue: options\n  }, {\n    provide: NGXS_LOGGER_PLUGIN_OPTIONS,\n    useFactory: loggerOptionsFactory,\n    deps: [USER_OPTIONS]\n  }]);\n}\n\n/**\n * The public api for consumers of @ngxs/logger-plugin\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NGXS_LOGGER_PLUGIN_OPTIONS, NgxsLoggerPlugin, NgxsLoggerPluginModule, withNgxsLoggerPlugin };\n"],
  "mappings": "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",
  "names": []
}
